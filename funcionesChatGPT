#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Estructura para manejar elementos (ejemplo con vuelos o elementos de archivo)
struct elem {
    int codigo;
    char nombre[20];
}; 
typedef struct elem ELEM;

// Función para pedir dimensiones de una matriz
void pedirDim(int* fil, int* col) {
    printf("Introduce el número de filas: ");
    scanf("%d", fil);
    printf("Introduce el número de columnas: ");
    scanf("%d", col);
}

// Función para reservar memoria dinámica para una matriz de enteros
int** reservarMemoriaMat(int fil, int col) {
    int** matriz = (int**)malloc(fil * sizeof(int*));
    for (int i = 0; i < fil; i++) {
        matriz[i] = (int*)malloc(col * sizeof(int));
    }
    return matriz;
}

// Función para liberar memoria de una matriz de enteros
void liberarMemoriaInt(int **matriz, int fil) {
    for (int i = 0; i < fil; i++) {
        free(matriz[i]);
    }
    free(matriz);
}

// Funciones para trabajar con matrices
void llenarMat(int **matriz, int fil, int col) {
    for (int i = 0; i < fil; i++) {
        for (int j = 0; j < col; j++) {
            printf("Introduce el valor [%d][%d]: ", i, j);
            scanf("%d", &matriz[i][j]);
        }
    }
}

void verMat(int **matriz, int fil, int col) {
    for (int i = 0; i < fil; i++) {
        for (int j = 0; j < col; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

// Funciones para manejo de archivos
void crearFichero(char* nomFich) {
    FILE *archivo = fopen(nomFich, "wb");
    if (archivo == NULL) {
        printf("Error al crear el archivo.\n");
        return;
    }
    fclose(archivo);
}

void verFich(char* nomFich) {
    FILE *archivo = fopen(nomFich, "rb");
    if (archivo == NULL) {
        printf("Error al abrir el archivo.\n");
        return;
    }
    ELEM elem;
    while (fread(&elem, sizeof(ELEM), 1, archivo)) {
        printf("Código: %d, Nombre: %s\n", elem.codigo, elem.nombre);
    }
    fclose(archivo);
}

// Funciones auxiliares para archivos
void insertarElemento(char* nomFich, ELEM nuevoElem) {
    FILE *archivo = fopen(nomFich, "ab");
    if (archivo == NULL) {
        printf("Error al abrir el archivo.\n");
        return;
    }
    fwrite(&nuevoElem, sizeof(ELEM), 1, archivo);
    fclose(archivo);
}

int pedirCodigo() {
    int codigo;
    printf("Introduce el código: ");
    scanf("%d", &codigo);
    return codigo;
}

// Función de menú para controlar opciones del usuario
void imprimirMenu() {
    printf("\nMenu de Opciones:\n");
    printf("1. Crear archivo\n");
    printf("2. Ver archivo\n");
    printf("3. Insertar elemento\n");
    printf("4. Salir\n");
    printf("Elige una opción: ");
}

void menu(char* nomFich) {
    int opcion;
    do {
        imprimirMenu();
        scanf("%d", &opcion);
        switch (opcion) {
            case 1:
                crearFichero(nomFich);
                break;
            case 2:
                verFich(nomFich);
                break;
            case 3: {
                ELEM nuevoElem;
                printf("Introduce el nombre: ");
                scanf("%s", nuevoElem.nombre);
                nuevoElem.codigo = pedirCodigo();
                insertarElemento(nomFich, nuevoElem);
                break;
            }
            case 4:
                printf("Saliendo...\n");
                break;
            default:
                printf("Opción no válida.\n");
        }
    } while (opcion != 4);
}

int main(int argc, char** argv) {
    char nomFich[] = "archivo.dat";
    menu(nomFich);
    return 0;
}